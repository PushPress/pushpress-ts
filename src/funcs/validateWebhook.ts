/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { PushPressCore } from "../core.js";
import { SDKValidationError } from "../models/errors/sdkvalidationerror.js";
import * as webhooks from "../models/webhooks/index.js";
import { ERR, Result } from "../types/fp.js";
import { WebhookAuthenticationError } from "../types/webhooks.js";

export async function validateWebhook(client: PushPressCore, {
  request: rawRequest,
  secret,
}: {
  request: {
    body: BodyInit;
    method: string;
    url: string;
    headers: Record<string, string> | Headers;
  } | Request;
  secret: string;
}): Promise<
  Result<
    | webhooks.CheckinCreatedEventRequestBody
    | webhooks.CheckinUpdatedEventRequestBody
    | webhooks.CheckinDeletedEventRequestBody
    | webhooks.AppInstalledEventRequestBody
    | webhooks.AppUninstalledEventRequestBody
    | webhooks.AppointmentScheduledEventRequestBody
    | webhooks.AppointmentRescheduledEventRequestBody
    | webhooks.AppointmentNoShowedEventRequestBody
    | webhooks.AppointmentCanceledEventRequestBody
    | webhooks.CustomerCreatedEventRequestBody
    | webhooks.CustomerStatusChangedEventRequestBody
    | webhooks.CustomerDetailsChangedEventRequestBody
    | webhooks.CustomerDeletedEventRequestBody
    | webhooks.ClassCanceledEventRequestBody
    | webhooks.EnrollmentCreatedEventRequestBody
    | webhooks.EnrollmentStatusChangedRequestBody
    | webhooks.EnrollmentDeletedRequestBody
    | webhooks.ReservationCreatedEventRequestBody
    | webhooks.ReservationWaitlistedEventRequestBody
    | webhooks.ReservationCanceledEventRequestBody,
    SDKValidationError | WebhookAuthenticationError
  >
> {
  const request = normalizeRequest(rawRequest);
  const verifyResult = await client._verifyWebhook({ request, secret });
  if (!verifyResult.ok) {
    return verifyResult;
  }
  const knownSchemas = [
    webhooks.checkinCreatedEventRequestBodyFromJSON,
    webhooks.checkinUpdatedEventRequestBodyFromJSON,
    webhooks.checkinDeletedEventRequestBodyFromJSON,
    webhooks.appInstalledEventRequestBodyFromJSON,
    webhooks.appUninstalledEventRequestBodyFromJSON,
    webhooks.appointmentScheduledEventRequestBodyFromJSON,
    webhooks.appointmentRescheduledEventRequestBodyFromJSON,
    webhooks.appointmentNoShowedEventRequestBodyFromJSON,
    webhooks.appointmentCanceledEventRequestBodyFromJSON,
    webhooks.customerCreatedEventRequestBodyFromJSON,
    webhooks.customerStatusChangedEventRequestBodyFromJSON,
    webhooks.customerDetailsChangedEventRequestBodyFromJSON,
    webhooks.customerDeletedEventRequestBodyFromJSON,
    webhooks.classCanceledEventRequestBodyFromJSON,
    webhooks.enrollmentCreatedEventRequestBodyFromJSON,
    webhooks.enrollmentStatusChangedRequestBodyFromJSON,
    webhooks.enrollmentDeletedRequestBodyFromJSON,
    webhooks.reservationCreatedEventRequestBodyFromJSON,
    webhooks.reservationWaitlistedEventRequestBodyFromJSON,
    webhooks.reservationCanceledEventRequestBodyFromJSON,
  ];

  const jsonString = await request.text();

  for (const schema of knownSchemas) {
    const ret = schema(jsonString);
    if (ret.ok) {
      return ret;
    }
  }

  return ERR(
    new SDKValidationError(
      "No matching schema found for the given webhook payload",
      jsonString,
      jsonString,
    ),
  );
}

function normalizeRequest(
  request: {
    body: BodyInit;
    method: string;
    url: string;
    headers: Record<string, string> | Headers;
  } | Request,
): Request {
  if (request instanceof Request) {
    return request;
  }
  return new Request(request.url, request);
}
