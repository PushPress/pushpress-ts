/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { PushPressCore } from "../core.js";
import { SDKOptions } from "../lib/config.js";
import type { ConsoleLogger } from "./console-logger.js";
import { createRegisterPrompt } from "./prompts.js";
import {
  createRegisterResource,
  createRegisterResourceTemplate,
} from "./resources.js";
import { MCPScope } from "./scopes.js";
import { createRegisterTool } from "./tools.js";
import { tool$checkinsAppointmentGet } from "./tools/checkinsAppointmentGet.js";
import { tool$checkinsAppointmentList } from "./tools/checkinsAppointmentList.js";
import { tool$checkinsClassGet } from "./tools/checkinsClassGet.js";
import { tool$checkinsClassList } from "./tools/checkinsClassList.js";
import { tool$checkinsCount } from "./tools/checkinsCount.js";
import { tool$checkinsEventGet } from "./tools/checkinsEventGet.js";
import { tool$checkinsEventList } from "./tools/checkinsEventList.js";
import { tool$checkinsOpenGet } from "./tools/checkinsOpenGet.js";
import { tool$checkinsOpenList } from "./tools/checkinsOpenList.js";
import { tool$classesGet } from "./tools/classesGet.js";
import { tool$classesTypeGet } from "./tools/classesTypeGet.js";
import { tool$classesTypeList } from "./tools/classesTypeList.js";
import { tool$companyGet } from "./tools/companyGet.js";
import { tool$customersAttributionsCreate } from "./tools/customersAttributionsCreate.js";
import { tool$customersAttributionsGet } from "./tools/customersAttributionsGet.js";
import { tool$customersAttributionsList } from "./tools/customersAttributionsList.js";
import { tool$customersCreate } from "./tools/customersCreate.js";
import { tool$customersGet } from "./tools/customersGet.js";
import { tool$customersList } from "./tools/customersList.js";
import { tool$enrollmentGet } from "./tools/enrollmentGet.js";
import { tool$enrollmentList } from "./tools/enrollmentList.js";
import { tool$eventsGet } from "./tools/eventsGet.js";
import { tool$manageWebhooksActivate } from "./tools/manageWebhooksActivate.js";
import { tool$manageWebhooksCreate } from "./tools/manageWebhooksCreate.js";
import { tool$manageWebhooksDeactivate } from "./tools/manageWebhooksDeactivate.js";
import { tool$manageWebhooksDelete } from "./tools/manageWebhooksDelete.js";
import { tool$manageWebhooksGet } from "./tools/manageWebhooksGet.js";
import { tool$manageWebhooksList } from "./tools/manageWebhooksList.js";
import { tool$manageWebhooksRotateSecret } from "./tools/manageWebhooksRotateSecret.js";
import { tool$manageWebhooksUpdate } from "./tools/manageWebhooksUpdate.js";
import { tool$messagesEmailSend } from "./tools/messagesEmailSend.js";
import { tool$messagesPushSend } from "./tools/messagesPushSend.js";
import { tool$messagesRealtimeSend } from "./tools/messagesRealtimeSend.js";
import { tool$messagesSmsSend } from "./tools/messagesSmsSend.js";
import { tool$plansGet } from "./tools/plansGet.js";

export function createMCPServer(deps: {
  logger: ConsoleLogger;
  allowedTools?: string[] | undefined;
  scopes?: MCPScope[] | undefined;
  serverURL?: string | undefined;
  apiKey?: SDKOptions["apiKey"] | undefined;
  companyId?: SDKOptions["companyId"] | undefined;
  server?: SDKOptions["server"] | undefined;
}) {
  const server = new McpServer({
    name: "PushPress",
    version: "1.9.0",
  });

  const client = new PushPressCore({
    apiKey: deps.apiKey,
    companyId: deps.companyId,
    serverURL: deps.serverURL,
    server: deps.server,
  });

  const scopes = new Set(deps.scopes);

  const allowedTools = deps.allowedTools && new Set(deps.allowedTools);
  const tool = createRegisterTool(
    deps.logger,
    server,
    client,
    scopes,
    allowedTools,
  );
  const resource = createRegisterResource(deps.logger, server, client, scopes);
  const resourceTemplate = createRegisterResourceTemplate(
    deps.logger,
    server,
    client,
    scopes,
  );
  const prompt = createRegisterPrompt(deps.logger, server, client, scopes);
  const register = { tool, resource, resourceTemplate, prompt };
  void register; // suppress unused warnings

  tool(tool$customersCreate);
  tool(tool$customersList);
  tool(tool$customersGet);
  tool(tool$checkinsCount);
  tool(tool$classesGet);
  tool(tool$companyGet);
  tool(tool$enrollmentGet);
  tool(tool$enrollmentList);
  tool(tool$eventsGet);
  tool(tool$plansGet);
  tool(tool$manageWebhooksCreate);
  tool(tool$manageWebhooksList);
  tool(tool$manageWebhooksGet);
  tool(tool$manageWebhooksUpdate);
  tool(tool$manageWebhooksDelete);
  tool(tool$manageWebhooksDeactivate);
  tool(tool$manageWebhooksActivate);
  tool(tool$manageWebhooksRotateSecret);
  tool(tool$customersAttributionsCreate);
  tool(tool$customersAttributionsList);
  tool(tool$customersAttributionsGet);
  tool(tool$checkinsEventGet);
  tool(tool$checkinsEventList);
  tool(tool$checkinsClassGet);
  tool(tool$checkinsClassList);
  tool(tool$checkinsOpenGet);
  tool(tool$checkinsOpenList);
  tool(tool$checkinsAppointmentGet);
  tool(tool$checkinsAppointmentList);
  tool(tool$classesTypeGet);
  tool(tool$classesTypeList);
  tool(tool$messagesEmailSend);
  tool(tool$messagesRealtimeSend);
  tool(tool$messagesPushSend);
  tool(tool$messagesSmsSend);

  return server;
}
