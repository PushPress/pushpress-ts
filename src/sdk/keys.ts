/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { keysCreate } from "../funcs/keysCreate.js";
import { keysList } from "../funcs/keysList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Keys extends ClientSDK {
  /**
   * Create a new API Key
   *
   * @remarks
   * Creates a new API key for authenticating requests. Admins in your account can create and view API keys.Consider implementing key rotation policies for enhanced security.
   */
  async create(
    security: operations.CreateApiKeySecurity,
    request: operations.CreateApiKeyRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateApiKeyResponseBody> {
    return unwrapAsync(keysCreate(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * List API Keys
   *
   * @remarks
   * Retrieves a list of all active API keys associated with your account. The response includes metadata such as creation date, last used timestamp, and current status, helping you monitor key usage and manage access.
   */
  async list(
    security: operations.ListApiKeysSecurity,
    request: operations.ListApiKeysRequest,
    options?: RequestOptions,
  ): Promise<operations.ListApiKeysResponseBody> {
    return unwrapAsync(keysList(
      this,
      security,
      request,
      options,
    ));
  }
}
