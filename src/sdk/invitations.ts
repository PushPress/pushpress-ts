/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { invitationsCreate } from "../funcs/invitationsCreate.js";
import { invitationsDelete } from "../funcs/invitationsDelete.js";
import { invitationsGet } from "../funcs/invitationsGet.js";
import { invitationsList } from "../funcs/invitationsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Invitations extends ClientSDK {
  /**
   * Get an invitation
   *
   * @remarks
   * Get an invitation for an event by its id
   */
  async get(
    request: operations.GetInvitationByIdRequest,
    options?: RequestOptions,
  ): Promise<components.Invitation> {
    return unwrapAsync(invitationsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete an invitation
   *
   * @remarks
   * Delete an invitation by its id
   */
  async delete(
    request: operations.DeleteInvitationByIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteInvitationByIdResponseBody> {
    return unwrapAsync(invitationsDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * List Invitations
   *
   * @remarks
   * Get a list of invitations in the current company
   */
  async list(
    request: operations.ListInvitationsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.ListInvitationsResponse, { page: number }>
  > {
    return unwrapResultIterator(invitationsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Invitations
   *
   * @remarks
   * Invite a list of customers to an event
   */
  async create(
    request: operations.CreateInvitationsRequest,
    options?: RequestOptions,
  ): Promise<Array<operations.ResponseBody>> {
    return unwrapAsync(invitationsCreate(
      this,
      request,
      options,
    ));
  }
}
