/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { apiKeysCreate } from "../funcs/apiKeysCreate.js";
import { apiKeysGet } from "../funcs/apiKeysGet.js";
import { apiKeysList } from "../funcs/apiKeysList.js";
import { apiKeysRevoke } from "../funcs/apiKeysRevoke.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class APIKeys extends ClientSDK {
  /**
   * Create a new API Key
   *
   * @remarks
   * Create a new api scoped to a specific company account
   */
  async create(
    security: operations.CreateApiKeySecurity,
    request: operations.CreateApiKeyRequest,
    options?: RequestOptions,
  ): Promise<components.ApiKey> {
    return unwrapAsync(apiKeysCreate(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Get a list of active keys in a given company
   */
  async list(
    security: operations.ListApiKeysSecurity,
    request: operations.ListApiKeysRequest,
    options?: RequestOptions,
  ): Promise<operations.ListApiKeysResponseBody> {
    return unwrapAsync(apiKeysList(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Get a key by its ID
   */
  async get(
    security: operations.GetApiKeySecurity,
    request: operations.GetApiKeyRequest,
    options?: RequestOptions,
  ): Promise<components.ApiKey> {
    return unwrapAsync(apiKeysGet(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Revoke an API Key
   *
   * @remarks
   * Revoke an API Key. Only the company that created the key can revoke it.
   */
  async revoke(
    security: operations.RevokeApiKeySecurity,
    request: operations.RevokeApiKeyRequest,
    options?: RequestOptions,
  ): Promise<components.ApiKey> {
    return unwrapAsync(apiKeysRevoke(
      this,
      security,
      request,
      options,
    ));
  }
}
