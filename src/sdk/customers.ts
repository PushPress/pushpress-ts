/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customersCreate } from "../funcs/customersCreate.js";
import { customersGet } from "../funcs/customersGet.js";
import { customersList } from "../funcs/customersList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";
import { Attributions } from "./attributions.js";

export class Customers extends ClientSDK {
  private _attributions?: Attributions;
  get attributions(): Attributions {
    return (this._attributions ??= new Attributions(this._options));
  }

  /**
   * Create a new Customer
   *
   * @remarks
   * Create a new customer in the platform. Note that this endpoint only supports creating leads at this time
   */
  async create(
    request: operations.CreateCustomerRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateCustomerResponseBody> {
    return unwrapAsync(customersCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * List Customers
   *
   * @remarks
   * Get a list of customers in the current company
   */
  async list(
    request: operations.ListCustomersRequest,
    options?: RequestOptions,
  ): Promise<PageIterator<operations.ListCustomersResponse, { page: number }>> {
    return unwrapResultIterator(customersList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Customer Details
   *
   * @remarks
   * Get individual customer information, including profile image, primary image, and other profile information.
   */
  async get(
    request: operations.GetCustomerRequest,
    options?: RequestOptions,
  ): Promise<components.Customer> {
    return unwrapAsync(customersGet(
      this,
      request,
      options,
    ));
  }
}
