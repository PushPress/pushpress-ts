/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { HTTPClient } from "./http.js";
import { Logger } from "./logger.js";
import { RetryConfig } from "./retries.js";
import { Params, pathToFunc } from "./url.js";

/**
 * production
 */
export const ServerProduction = "production";
/**
 * staging
 */
export const ServerStaging = "staging";
/**
 * development
 */
export const ServerDevelopment = "development";
/**
 * Contains the list of servers available to the SDK
 */
export const ServerList = {
  [ServerProduction]: "https://api.pushpress.com/v3",
  [ServerStaging]: "https://api.pushpressstage.com/v3",
  [ServerDevelopment]: "https://api.pushpressdev.com/v3",
} as const;

export type SDKOptions = {
  apiKey?: string | (() => Promise<string>) | undefined;

  /**
   * Allows setting the companyId parameter for all supported operations
   */
  companyId?: string | undefined;

  httpClient?: HTTPClient;
  /**
   * Allows overriding the default server used by the SDK
   */
  server?: keyof typeof ServerList | undefined;
  /**
   * Allows overriding the default server URL used by the SDK
   */
  serverURL?: string | undefined;
  /**
   * Allows overriding the default retry config used by the SDK
   */
  retryConfig?: RetryConfig;
  timeoutMs?: number;
  debugLogger?: Logger;
};

export function serverURLFromOptions(options: SDKOptions): URL | null {
  let serverURL = options.serverURL;

  const params: Params = {};

  if (!serverURL) {
    const server = options.server ?? ServerProduction;
    serverURL = ServerList[server] || "";
  }

  const u = pathToFunc(serverURL)(params);
  return new URL(u);
}

export const SDK_METADATA = {
  language: "typescript",
  openapiDocVersion: "3.0.0",
  sdkVersion: "1.9.0",
  genVersion: "2.598.22",
  userAgent:
    "speakeasy-sdk/typescript 1.9.0 2.598.22 3.0.0 @pushpress/pushpress",
} as const;
