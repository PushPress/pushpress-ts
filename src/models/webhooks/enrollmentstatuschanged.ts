/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const EnrollmentStatusChangedEvent = {
  EnrollmentStatusChanged: "enrollment.status.changed",
} as const;
export type EnrollmentStatusChangedEvent = ClosedEnum<
  typeof EnrollmentStatusChangedEvent
>;

/**
 * Enrollment Status Changed Event (Not implemented)
 */
export type EnrollmentStatusChangedRequestBody = {
  /**
   * Schema representing a subscription that a customer has to a plan
   */
  data: components.Enrollment;
  /**
   * Unix timestamp representing when the event was created
   */
  created: number;
  event: EnrollmentStatusChangedEvent;
};

/** @internal */
export const EnrollmentStatusChangedEvent$inboundSchema: z.ZodNativeEnum<
  typeof EnrollmentStatusChangedEvent
> = z.nativeEnum(EnrollmentStatusChangedEvent);

/** @internal */
export const EnrollmentStatusChangedEvent$outboundSchema: z.ZodNativeEnum<
  typeof EnrollmentStatusChangedEvent
> = EnrollmentStatusChangedEvent$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EnrollmentStatusChangedEvent$ {
  /** @deprecated use `EnrollmentStatusChangedEvent$inboundSchema` instead. */
  export const inboundSchema = EnrollmentStatusChangedEvent$inboundSchema;
  /** @deprecated use `EnrollmentStatusChangedEvent$outboundSchema` instead. */
  export const outboundSchema = EnrollmentStatusChangedEvent$outboundSchema;
}

/** @internal */
export const EnrollmentStatusChangedRequestBody$inboundSchema: z.ZodType<
  EnrollmentStatusChangedRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: components.Enrollment$inboundSchema,
  created: z.number().int(),
  event: EnrollmentStatusChangedEvent$inboundSchema,
});

/** @internal */
export type EnrollmentStatusChangedRequestBody$Outbound = {
  data: components.Enrollment$Outbound;
  created: number;
  event: string;
};

/** @internal */
export const EnrollmentStatusChangedRequestBody$outboundSchema: z.ZodType<
  EnrollmentStatusChangedRequestBody$Outbound,
  z.ZodTypeDef,
  EnrollmentStatusChangedRequestBody
> = z.object({
  data: components.Enrollment$outboundSchema,
  created: z.number().int(),
  event: EnrollmentStatusChangedEvent$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EnrollmentStatusChangedRequestBody$ {
  /** @deprecated use `EnrollmentStatusChangedRequestBody$inboundSchema` instead. */
  export const inboundSchema = EnrollmentStatusChangedRequestBody$inboundSchema;
  /** @deprecated use `EnrollmentStatusChangedRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    EnrollmentStatusChangedRequestBody$outboundSchema;
  /** @deprecated use `EnrollmentStatusChangedRequestBody$Outbound` instead. */
  export type Outbound = EnrollmentStatusChangedRequestBody$Outbound;
}

export function enrollmentStatusChangedRequestBodyToJSON(
  enrollmentStatusChangedRequestBody: EnrollmentStatusChangedRequestBody,
): string {
  return JSON.stringify(
    EnrollmentStatusChangedRequestBody$outboundSchema.parse(
      enrollmentStatusChangedRequestBody,
    ),
  );
}

export function enrollmentStatusChangedRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<EnrollmentStatusChangedRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      EnrollmentStatusChangedRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EnrollmentStatusChangedRequestBody' from JSON`,
  );
}
