/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type EnrollmentDeletedData = {
  id: string;
};

export const EnrollmentDeletedEvent = {
  EnrollmentDeleted: "enrollment.deleted",
} as const;
export type EnrollmentDeletedEvent = ClosedEnum<typeof EnrollmentDeletedEvent>;

/**
 * Enrollment deleted, most often because of a failed initial payment
 */
export type EnrollmentDeletedRequestBody = {
  data: EnrollmentDeletedData;
  /**
   * Unix timestamp representing when the event was created
   */
  created: number;
  event: EnrollmentDeletedEvent;
};

/** @internal */
export const EnrollmentDeletedData$inboundSchema: z.ZodType<
  EnrollmentDeletedData,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type EnrollmentDeletedData$Outbound = {
  id: string;
};

/** @internal */
export const EnrollmentDeletedData$outboundSchema: z.ZodType<
  EnrollmentDeletedData$Outbound,
  z.ZodTypeDef,
  EnrollmentDeletedData
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EnrollmentDeletedData$ {
  /** @deprecated use `EnrollmentDeletedData$inboundSchema` instead. */
  export const inboundSchema = EnrollmentDeletedData$inboundSchema;
  /** @deprecated use `EnrollmentDeletedData$outboundSchema` instead. */
  export const outboundSchema = EnrollmentDeletedData$outboundSchema;
  /** @deprecated use `EnrollmentDeletedData$Outbound` instead. */
  export type Outbound = EnrollmentDeletedData$Outbound;
}

export function enrollmentDeletedDataToJSON(
  enrollmentDeletedData: EnrollmentDeletedData,
): string {
  return JSON.stringify(
    EnrollmentDeletedData$outboundSchema.parse(enrollmentDeletedData),
  );
}

export function enrollmentDeletedDataFromJSON(
  jsonString: string,
): SafeParseResult<EnrollmentDeletedData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EnrollmentDeletedData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EnrollmentDeletedData' from JSON`,
  );
}

/** @internal */
export const EnrollmentDeletedEvent$inboundSchema: z.ZodNativeEnum<
  typeof EnrollmentDeletedEvent
> = z.nativeEnum(EnrollmentDeletedEvent);

/** @internal */
export const EnrollmentDeletedEvent$outboundSchema: z.ZodNativeEnum<
  typeof EnrollmentDeletedEvent
> = EnrollmentDeletedEvent$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EnrollmentDeletedEvent$ {
  /** @deprecated use `EnrollmentDeletedEvent$inboundSchema` instead. */
  export const inboundSchema = EnrollmentDeletedEvent$inboundSchema;
  /** @deprecated use `EnrollmentDeletedEvent$outboundSchema` instead. */
  export const outboundSchema = EnrollmentDeletedEvent$outboundSchema;
}

/** @internal */
export const EnrollmentDeletedRequestBody$inboundSchema: z.ZodType<
  EnrollmentDeletedRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => EnrollmentDeletedData$inboundSchema),
  created: z.number().int(),
  event: EnrollmentDeletedEvent$inboundSchema,
});

/** @internal */
export type EnrollmentDeletedRequestBody$Outbound = {
  data: EnrollmentDeletedData$Outbound;
  created: number;
  event: string;
};

/** @internal */
export const EnrollmentDeletedRequestBody$outboundSchema: z.ZodType<
  EnrollmentDeletedRequestBody$Outbound,
  z.ZodTypeDef,
  EnrollmentDeletedRequestBody
> = z.object({
  data: z.lazy(() => EnrollmentDeletedData$outboundSchema),
  created: z.number().int(),
  event: EnrollmentDeletedEvent$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EnrollmentDeletedRequestBody$ {
  /** @deprecated use `EnrollmentDeletedRequestBody$inboundSchema` instead. */
  export const inboundSchema = EnrollmentDeletedRequestBody$inboundSchema;
  /** @deprecated use `EnrollmentDeletedRequestBody$outboundSchema` instead. */
  export const outboundSchema = EnrollmentDeletedRequestBody$outboundSchema;
  /** @deprecated use `EnrollmentDeletedRequestBody$Outbound` instead. */
  export type Outbound = EnrollmentDeletedRequestBody$Outbound;
}

export function enrollmentDeletedRequestBodyToJSON(
  enrollmentDeletedRequestBody: EnrollmentDeletedRequestBody,
): string {
  return JSON.stringify(
    EnrollmentDeletedRequestBody$outboundSchema.parse(
      enrollmentDeletedRequestBody,
    ),
  );
}

export function enrollmentDeletedRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<EnrollmentDeletedRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EnrollmentDeletedRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EnrollmentDeletedRequestBody' from JSON`,
  );
}
