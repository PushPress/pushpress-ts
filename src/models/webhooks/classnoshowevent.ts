/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const ClassNoShowEventEvent = {
  ClassNoshow: "class.noshow",
} as const;
export type ClassNoShowEventEvent = ClosedEnum<typeof ClassNoShowEventEvent>;

/**
 * Class No Show Event (Not implemented)
 */
export type ClassNoShowEventRequestBody = {
  /**
   * Schema for representing a scheduled class
   */
  data: components.Class;
  /**
   * Unix timestamp representing when the event was created
   */
  created: number;
  event: ClassNoShowEventEvent;
};

/** @internal */
export const ClassNoShowEventEvent$inboundSchema: z.ZodNativeEnum<
  typeof ClassNoShowEventEvent
> = z.nativeEnum(ClassNoShowEventEvent);

/** @internal */
export const ClassNoShowEventEvent$outboundSchema: z.ZodNativeEnum<
  typeof ClassNoShowEventEvent
> = ClassNoShowEventEvent$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClassNoShowEventEvent$ {
  /** @deprecated use `ClassNoShowEventEvent$inboundSchema` instead. */
  export const inboundSchema = ClassNoShowEventEvent$inboundSchema;
  /** @deprecated use `ClassNoShowEventEvent$outboundSchema` instead. */
  export const outboundSchema = ClassNoShowEventEvent$outboundSchema;
}

/** @internal */
export const ClassNoShowEventRequestBody$inboundSchema: z.ZodType<
  ClassNoShowEventRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: components.Class$inboundSchema,
  created: z.number().int(),
  event: ClassNoShowEventEvent$inboundSchema,
});

/** @internal */
export type ClassNoShowEventRequestBody$Outbound = {
  data: components.Class$Outbound;
  created: number;
  event: string;
};

/** @internal */
export const ClassNoShowEventRequestBody$outboundSchema: z.ZodType<
  ClassNoShowEventRequestBody$Outbound,
  z.ZodTypeDef,
  ClassNoShowEventRequestBody
> = z.object({
  data: components.Class$outboundSchema,
  created: z.number().int(),
  event: ClassNoShowEventEvent$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClassNoShowEventRequestBody$ {
  /** @deprecated use `ClassNoShowEventRequestBody$inboundSchema` instead. */
  export const inboundSchema = ClassNoShowEventRequestBody$inboundSchema;
  /** @deprecated use `ClassNoShowEventRequestBody$outboundSchema` instead. */
  export const outboundSchema = ClassNoShowEventRequestBody$outboundSchema;
  /** @deprecated use `ClassNoShowEventRequestBody$Outbound` instead. */
  export type Outbound = ClassNoShowEventRequestBody$Outbound;
}

export function classNoShowEventRequestBodyToJSON(
  classNoShowEventRequestBody: ClassNoShowEventRequestBody,
): string {
  return JSON.stringify(
    ClassNoShowEventRequestBody$outboundSchema.parse(
      classNoShowEventRequestBody,
    ),
  );
}

export function classNoShowEventRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<ClassNoShowEventRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ClassNoShowEventRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ClassNoShowEventRequestBody' from JSON`,
  );
}
