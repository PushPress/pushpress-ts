/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const ReservationCancelledEventEvent = {
  ReservationCancelled: "reservation.cancelled",
} as const;
export type ReservationCancelledEventEvent = ClosedEnum<
  typeof ReservationCancelledEventEvent
>;

/**
 * Reservation Cancelled Event (Not implemented)
 */
export type ReservationCancelledEventRequestBody = {
  /**
   * Schema for representing a reservation for a class or event
   */
  data: components.Reservation;
  /**
   * Unix timestamp representing when the event was created
   */
  created: number;
  event: ReservationCancelledEventEvent;
};

/** @internal */
export const ReservationCancelledEventEvent$inboundSchema: z.ZodNativeEnum<
  typeof ReservationCancelledEventEvent
> = z.nativeEnum(ReservationCancelledEventEvent);

/** @internal */
export const ReservationCancelledEventEvent$outboundSchema: z.ZodNativeEnum<
  typeof ReservationCancelledEventEvent
> = ReservationCancelledEventEvent$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReservationCancelledEventEvent$ {
  /** @deprecated use `ReservationCancelledEventEvent$inboundSchema` instead. */
  export const inboundSchema = ReservationCancelledEventEvent$inboundSchema;
  /** @deprecated use `ReservationCancelledEventEvent$outboundSchema` instead. */
  export const outboundSchema = ReservationCancelledEventEvent$outboundSchema;
}

/** @internal */
export const ReservationCancelledEventRequestBody$inboundSchema: z.ZodType<
  ReservationCancelledEventRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: components.Reservation$inboundSchema,
  created: z.number().int(),
  event: ReservationCancelledEventEvent$inboundSchema,
});

/** @internal */
export type ReservationCancelledEventRequestBody$Outbound = {
  data: components.Reservation$Outbound;
  created: number;
  event: string;
};

/** @internal */
export const ReservationCancelledEventRequestBody$outboundSchema: z.ZodType<
  ReservationCancelledEventRequestBody$Outbound,
  z.ZodTypeDef,
  ReservationCancelledEventRequestBody
> = z.object({
  data: components.Reservation$outboundSchema,
  created: z.number().int(),
  event: ReservationCancelledEventEvent$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReservationCancelledEventRequestBody$ {
  /** @deprecated use `ReservationCancelledEventRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    ReservationCancelledEventRequestBody$inboundSchema;
  /** @deprecated use `ReservationCancelledEventRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    ReservationCancelledEventRequestBody$outboundSchema;
  /** @deprecated use `ReservationCancelledEventRequestBody$Outbound` instead. */
  export type Outbound = ReservationCancelledEventRequestBody$Outbound;
}

export function reservationCancelledEventRequestBodyToJSON(
  reservationCancelledEventRequestBody: ReservationCancelledEventRequestBody,
): string {
  return JSON.stringify(
    ReservationCancelledEventRequestBody$outboundSchema.parse(
      reservationCancelledEventRequestBody,
    ),
  );
}

export function reservationCancelledEventRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<ReservationCancelledEventRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ReservationCancelledEventRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ReservationCancelledEventRequestBody' from JSON`,
  );
}
