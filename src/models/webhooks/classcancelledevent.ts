/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const ClassCancelledEventEvent = {
  ClassCancelled: "class.cancelled",
} as const;
export type ClassCancelledEventEvent = ClosedEnum<
  typeof ClassCancelledEventEvent
>;

/**
 * Class Cancelled Event (Not implemented)
 */
export type ClassCancelledEventRequestBody = {
  /**
   * Schema for representing a scheduled class
   */
  data: components.Class;
  /**
   * Unix timestamp representing when the event was created
   */
  created: number;
  event: ClassCancelledEventEvent;
};

/** @internal */
export const ClassCancelledEventEvent$inboundSchema: z.ZodNativeEnum<
  typeof ClassCancelledEventEvent
> = z.nativeEnum(ClassCancelledEventEvent);

/** @internal */
export const ClassCancelledEventEvent$outboundSchema: z.ZodNativeEnum<
  typeof ClassCancelledEventEvent
> = ClassCancelledEventEvent$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClassCancelledEventEvent$ {
  /** @deprecated use `ClassCancelledEventEvent$inboundSchema` instead. */
  export const inboundSchema = ClassCancelledEventEvent$inboundSchema;
  /** @deprecated use `ClassCancelledEventEvent$outboundSchema` instead. */
  export const outboundSchema = ClassCancelledEventEvent$outboundSchema;
}

/** @internal */
export const ClassCancelledEventRequestBody$inboundSchema: z.ZodType<
  ClassCancelledEventRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: components.Class$inboundSchema,
  created: z.number().int(),
  event: ClassCancelledEventEvent$inboundSchema,
});

/** @internal */
export type ClassCancelledEventRequestBody$Outbound = {
  data: components.Class$Outbound;
  created: number;
  event: string;
};

/** @internal */
export const ClassCancelledEventRequestBody$outboundSchema: z.ZodType<
  ClassCancelledEventRequestBody$Outbound,
  z.ZodTypeDef,
  ClassCancelledEventRequestBody
> = z.object({
  data: components.Class$outboundSchema,
  created: z.number().int(),
  event: ClassCancelledEventEvent$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClassCancelledEventRequestBody$ {
  /** @deprecated use `ClassCancelledEventRequestBody$inboundSchema` instead. */
  export const inboundSchema = ClassCancelledEventRequestBody$inboundSchema;
  /** @deprecated use `ClassCancelledEventRequestBody$outboundSchema` instead. */
  export const outboundSchema = ClassCancelledEventRequestBody$outboundSchema;
  /** @deprecated use `ClassCancelledEventRequestBody$Outbound` instead. */
  export type Outbound = ClassCancelledEventRequestBody$Outbound;
}

export function classCancelledEventRequestBodyToJSON(
  classCancelledEventRequestBody: ClassCancelledEventRequestBody,
): string {
  return JSON.stringify(
    ClassCancelledEventRequestBody$outboundSchema.parse(
      classCancelledEventRequestBody,
    ),
  );
}

export function classCancelledEventRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<ClassCancelledEventRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ClassCancelledEventRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ClassCancelledEventRequestBody' from JSON`,
  );
}
