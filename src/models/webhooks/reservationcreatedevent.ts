/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const ReservationCreatedEventEvent = {
  ReservationCreated: "reservation.created",
} as const;
export type ReservationCreatedEventEvent = ClosedEnum<
  typeof ReservationCreatedEventEvent
>;

/**
 * Reservation Created Event
 */
export type ReservationCreatedEventRequestBody = {
  /**
   * Schema for representing a reservation for a class or event
   */
  data: components.Reservation;
  /**
   * Unix timestamp representing when the event was created
   */
  created: number;
  event: ReservationCreatedEventEvent;
};

/** @internal */
export const ReservationCreatedEventEvent$inboundSchema: z.ZodNativeEnum<
  typeof ReservationCreatedEventEvent
> = z.nativeEnum(ReservationCreatedEventEvent);

/** @internal */
export const ReservationCreatedEventEvent$outboundSchema: z.ZodNativeEnum<
  typeof ReservationCreatedEventEvent
> = ReservationCreatedEventEvent$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReservationCreatedEventEvent$ {
  /** @deprecated use `ReservationCreatedEventEvent$inboundSchema` instead. */
  export const inboundSchema = ReservationCreatedEventEvent$inboundSchema;
  /** @deprecated use `ReservationCreatedEventEvent$outboundSchema` instead. */
  export const outboundSchema = ReservationCreatedEventEvent$outboundSchema;
}

/** @internal */
export const ReservationCreatedEventRequestBody$inboundSchema: z.ZodType<
  ReservationCreatedEventRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: components.Reservation$inboundSchema,
  created: z.number().int(),
  event: ReservationCreatedEventEvent$inboundSchema,
});

/** @internal */
export type ReservationCreatedEventRequestBody$Outbound = {
  data: components.Reservation$Outbound;
  created: number;
  event: string;
};

/** @internal */
export const ReservationCreatedEventRequestBody$outboundSchema: z.ZodType<
  ReservationCreatedEventRequestBody$Outbound,
  z.ZodTypeDef,
  ReservationCreatedEventRequestBody
> = z.object({
  data: components.Reservation$outboundSchema,
  created: z.number().int(),
  event: ReservationCreatedEventEvent$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReservationCreatedEventRequestBody$ {
  /** @deprecated use `ReservationCreatedEventRequestBody$inboundSchema` instead. */
  export const inboundSchema = ReservationCreatedEventRequestBody$inboundSchema;
  /** @deprecated use `ReservationCreatedEventRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    ReservationCreatedEventRequestBody$outboundSchema;
  /** @deprecated use `ReservationCreatedEventRequestBody$Outbound` instead. */
  export type Outbound = ReservationCreatedEventRequestBody$Outbound;
}

export function reservationCreatedEventRequestBodyToJSON(
  reservationCreatedEventRequestBody: ReservationCreatedEventRequestBody,
): string {
  return JSON.stringify(
    ReservationCreatedEventRequestBody$outboundSchema.parse(
      reservationCreatedEventRequestBody,
    ),
  );
}

export function reservationCreatedEventRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<ReservationCreatedEventRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ReservationCreatedEventRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ReservationCreatedEventRequestBody' from JSON`,
  );
}
