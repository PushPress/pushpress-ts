/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const CheckinCreatedEventEvent = {
  CheckinCreated: "checkin.created",
} as const;
export type CheckinCreatedEventEvent = ClosedEnum<
  typeof CheckinCreatedEventEvent
>;

export type CheckinCreatedEventRequestBody = {
  /**
   * Checkin for a class, event, or appointment
   */
  data: components.Checkin;
  /**
   * Unix timestamp of the creation event
   */
  created: number;
  event: CheckinCreatedEventEvent;
};

/** @internal */
export const CheckinCreatedEventEvent$inboundSchema: z.ZodNativeEnum<
  typeof CheckinCreatedEventEvent
> = z.nativeEnum(CheckinCreatedEventEvent);

/** @internal */
export const CheckinCreatedEventEvent$outboundSchema: z.ZodNativeEnum<
  typeof CheckinCreatedEventEvent
> = CheckinCreatedEventEvent$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckinCreatedEventEvent$ {
  /** @deprecated use `CheckinCreatedEventEvent$inboundSchema` instead. */
  export const inboundSchema = CheckinCreatedEventEvent$inboundSchema;
  /** @deprecated use `CheckinCreatedEventEvent$outboundSchema` instead. */
  export const outboundSchema = CheckinCreatedEventEvent$outboundSchema;
}

/** @internal */
export const CheckinCreatedEventRequestBody$inboundSchema: z.ZodType<
  CheckinCreatedEventRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: components.Checkin$inboundSchema,
  created: z.number().int(),
  event: CheckinCreatedEventEvent$inboundSchema,
});

/** @internal */
export type CheckinCreatedEventRequestBody$Outbound = {
  data: components.Checkin$Outbound;
  created: number;
  event: string;
};

/** @internal */
export const CheckinCreatedEventRequestBody$outboundSchema: z.ZodType<
  CheckinCreatedEventRequestBody$Outbound,
  z.ZodTypeDef,
  CheckinCreatedEventRequestBody
> = z.object({
  data: components.Checkin$outboundSchema,
  created: z.number().int(),
  event: CheckinCreatedEventEvent$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckinCreatedEventRequestBody$ {
  /** @deprecated use `CheckinCreatedEventRequestBody$inboundSchema` instead. */
  export const inboundSchema = CheckinCreatedEventRequestBody$inboundSchema;
  /** @deprecated use `CheckinCreatedEventRequestBody$outboundSchema` instead. */
  export const outboundSchema = CheckinCreatedEventRequestBody$outboundSchema;
  /** @deprecated use `CheckinCreatedEventRequestBody$Outbound` instead. */
  export type Outbound = CheckinCreatedEventRequestBody$Outbound;
}

export function checkinCreatedEventRequestBodyToJSON(
  checkinCreatedEventRequestBody: CheckinCreatedEventRequestBody,
): string {
  return JSON.stringify(
    CheckinCreatedEventRequestBody$outboundSchema.parse(
      checkinCreatedEventRequestBody,
    ),
  );
}

export function checkinCreatedEventRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<CheckinCreatedEventRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CheckinCreatedEventRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CheckinCreatedEventRequestBody' from JSON`,
  );
}
