/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppointmentCheckin,
  AppointmentCheckin$inboundSchema,
  AppointmentCheckin$Outbound,
  AppointmentCheckin$outboundSchema,
} from "./appointmentcheckin.js";
import {
  ClassCheckin,
  ClassCheckin$inboundSchema,
  ClassCheckin$Outbound,
  ClassCheckin$outboundSchema,
} from "./classcheckin.js";
import {
  EventCheckin,
  EventCheckin$inboundSchema,
  EventCheckin$Outbound,
  EventCheckin$outboundSchema,
} from "./eventcheckin.js";
import {
  OpenCheckin,
  OpenCheckin$inboundSchema,
  OpenCheckin$Outbound,
  OpenCheckin$outboundSchema,
} from "./opencheckin.js";

/**
 * Checkin for a class, event, appointment or an open facility
 */
export type Checkin =
  | ClassCheckin
  | EventCheckin
  | AppointmentCheckin
  | OpenCheckin;

/** @internal */
export const Checkin$inboundSchema: z.ZodType<Checkin, z.ZodTypeDef, unknown> =
  z.union([
    ClassCheckin$inboundSchema,
    EventCheckin$inboundSchema,
    AppointmentCheckin$inboundSchema,
    OpenCheckin$inboundSchema,
  ]);

/** @internal */
export type Checkin$Outbound =
  | ClassCheckin$Outbound
  | EventCheckin$Outbound
  | AppointmentCheckin$Outbound
  | OpenCheckin$Outbound;

/** @internal */
export const Checkin$outboundSchema: z.ZodType<
  Checkin$Outbound,
  z.ZodTypeDef,
  Checkin
> = z.union([
  ClassCheckin$outboundSchema,
  EventCheckin$outboundSchema,
  AppointmentCheckin$outboundSchema,
  OpenCheckin$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Checkin$ {
  /** @deprecated use `Checkin$inboundSchema` instead. */
  export const inboundSchema = Checkin$inboundSchema;
  /** @deprecated use `Checkin$outboundSchema` instead. */
  export const outboundSchema = Checkin$outboundSchema;
  /** @deprecated use `Checkin$Outbound` instead. */
  export type Outbound = Checkin$Outbound;
}

export function checkinToJSON(checkin: Checkin): string {
  return JSON.stringify(Checkin$outboundSchema.parse(checkin));
}

export function checkinFromJSON(
  jsonString: string,
): SafeParseResult<Checkin, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Checkin$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Checkin' from JSON`,
  );
}
