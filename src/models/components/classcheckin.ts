/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

export const ClassCheckinRole = {
  Staff: "staff",
  Coach: "coach",
  Assistant: "assistant",
  Attendee: "attendee",
} as const;
export type ClassCheckinRole = ClosedEnum<typeof ClassCheckinRole>;

/**
 * Checkin for a class
 */
export type ClassCheckin = {
  /**
   * Unique identifier for the checkin
   */
  id: string;
  /**
   * UUID of the customer
   */
  customer: string;
  /**
   * UUID of the company
   */
  company: string;
  /**
   * Name of the checked-in class
   */
  name: string;
  type?: "ClassCheckin" | undefined;
  /**
   * Unix timestamp of the checkin
   */
  timestamp: number;
  role: ClassCheckinRole;
};

/** @internal */
export const ClassCheckinRole$inboundSchema: z.ZodNativeEnum<
  typeof ClassCheckinRole
> = z.nativeEnum(ClassCheckinRole);

/** @internal */
export const ClassCheckinRole$outboundSchema: z.ZodNativeEnum<
  typeof ClassCheckinRole
> = ClassCheckinRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClassCheckinRole$ {
  /** @deprecated use `ClassCheckinRole$inboundSchema` instead. */
  export const inboundSchema = ClassCheckinRole$inboundSchema;
  /** @deprecated use `ClassCheckinRole$outboundSchema` instead. */
  export const outboundSchema = ClassCheckinRole$outboundSchema;
}

/** @internal */
export const ClassCheckin$inboundSchema: z.ZodType<
  ClassCheckin,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  customer: z.string(),
  company: z.string(),
  name: z.string(),
  type: z.literal("ClassCheckin").optional(),
  timestamp: z.number(),
  role: ClassCheckinRole$inboundSchema,
});

/** @internal */
export type ClassCheckin$Outbound = {
  id: string;
  customer: string;
  company: string;
  name: string;
  type: "ClassCheckin";
  timestamp: number;
  role: string;
};

/** @internal */
export const ClassCheckin$outboundSchema: z.ZodType<
  ClassCheckin$Outbound,
  z.ZodTypeDef,
  ClassCheckin
> = z.object({
  id: z.string(),
  customer: z.string(),
  company: z.string(),
  name: z.string(),
  type: z.literal("ClassCheckin").default("ClassCheckin" as const),
  timestamp: z.number(),
  role: ClassCheckinRole$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClassCheckin$ {
  /** @deprecated use `ClassCheckin$inboundSchema` instead. */
  export const inboundSchema = ClassCheckin$inboundSchema;
  /** @deprecated use `ClassCheckin$outboundSchema` instead. */
  export const outboundSchema = ClassCheckin$outboundSchema;
  /** @deprecated use `ClassCheckin$Outbound` instead. */
  export type Outbound = ClassCheckin$Outbound;
}
