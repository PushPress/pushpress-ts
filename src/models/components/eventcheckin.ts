/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

export const Role = {
  Staff: "staff",
  Coach: "coach",
  Assistant: "assistant",
  Attendee: "attendee",
} as const;
export type Role = ClosedEnum<typeof Role>;

/**
 * Checkin for an event
 */
export type EventCheckin = {
  /**
   * Unique identifier for the event
   */
  id: string;
  /**
   * Name of the event
   */
  name: string;
  /**
   * UUID of the customer
   */
  customer: string;
  /**
   * UUID of the company
   */
  company: string;
  type?: "EventCheckin" | undefined;
  /**
   * Unix timestamp of the event
   */
  timestamp: number;
  role: Role;
};

/** @internal */
export const Role$inboundSchema: z.ZodNativeEnum<typeof Role> = z.nativeEnum(
  Role,
);

/** @internal */
export const Role$outboundSchema: z.ZodNativeEnum<typeof Role> =
  Role$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Role$ {
  /** @deprecated use `Role$inboundSchema` instead. */
  export const inboundSchema = Role$inboundSchema;
  /** @deprecated use `Role$outboundSchema` instead. */
  export const outboundSchema = Role$outboundSchema;
}

/** @internal */
export const EventCheckin$inboundSchema: z.ZodType<
  EventCheckin,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  name: z.string(),
  customer: z.string(),
  company: z.string(),
  type: z.literal("EventCheckin").optional(),
  timestamp: z.number(),
  role: Role$inboundSchema,
});

/** @internal */
export type EventCheckin$Outbound = {
  id: string;
  name: string;
  customer: string;
  company: string;
  type: "EventCheckin";
  timestamp: number;
  role: string;
};

/** @internal */
export const EventCheckin$outboundSchema: z.ZodType<
  EventCheckin$Outbound,
  z.ZodTypeDef,
  EventCheckin
> = z.object({
  id: z.string(),
  name: z.string(),
  customer: z.string(),
  company: z.string(),
  type: z.literal("EventCheckin").default("EventCheckin" as const),
  timestamp: z.number(),
  role: Role$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EventCheckin$ {
  /** @deprecated use `EventCheckin$inboundSchema` instead. */
  export const inboundSchema = EventCheckin$inboundSchema;
  /** @deprecated use `EventCheckin$outboundSchema` instead. */
  export const outboundSchema = EventCheckin$outboundSchema;
  /** @deprecated use `EventCheckin$Outbound` instead. */
  export type Outbound = EventCheckin$Outbound;
}
