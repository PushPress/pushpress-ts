/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type SendEmailRequestBody = {
  to: string;
  subject: string;
  body: string;
  from: string;
  cc?: string | undefined;
  bcc?: string | undefined;
  replyTo?: string | undefined;
};

export type SendEmailRequest = {
  companyId?: string | undefined;
  requestBody: SendEmailRequestBody;
};

/** @internal */
export const SendEmailRequestBody$inboundSchema: z.ZodType<
  SendEmailRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  to: z.string(),
  subject: z.string(),
  body: z.string(),
  from: z.string(),
  cc: z.string().optional(),
  bcc: z.string().optional(),
  replyTo: z.string().optional(),
});

/** @internal */
export type SendEmailRequestBody$Outbound = {
  to: string;
  subject: string;
  body: string;
  from: string;
  cc?: string | undefined;
  bcc?: string | undefined;
  replyTo?: string | undefined;
};

/** @internal */
export const SendEmailRequestBody$outboundSchema: z.ZodType<
  SendEmailRequestBody$Outbound,
  z.ZodTypeDef,
  SendEmailRequestBody
> = z.object({
  to: z.string(),
  subject: z.string(),
  body: z.string(),
  from: z.string(),
  cc: z.string().optional(),
  bcc: z.string().optional(),
  replyTo: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SendEmailRequestBody$ {
  /** @deprecated use `SendEmailRequestBody$inboundSchema` instead. */
  export const inboundSchema = SendEmailRequestBody$inboundSchema;
  /** @deprecated use `SendEmailRequestBody$outboundSchema` instead. */
  export const outboundSchema = SendEmailRequestBody$outboundSchema;
  /** @deprecated use `SendEmailRequestBody$Outbound` instead. */
  export type Outbound = SendEmailRequestBody$Outbound;
}

/** @internal */
export const SendEmailRequest$inboundSchema: z.ZodType<
  SendEmailRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyId: z.string().optional(),
  RequestBody: z.lazy(() => SendEmailRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type SendEmailRequest$Outbound = {
  companyId?: string | undefined;
  RequestBody: SendEmailRequestBody$Outbound;
};

/** @internal */
export const SendEmailRequest$outboundSchema: z.ZodType<
  SendEmailRequest$Outbound,
  z.ZodTypeDef,
  SendEmailRequest
> = z.object({
  companyId: z.string().optional(),
  requestBody: z.lazy(() => SendEmailRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SendEmailRequest$ {
  /** @deprecated use `SendEmailRequest$inboundSchema` instead. */
  export const inboundSchema = SendEmailRequest$inboundSchema;
  /** @deprecated use `SendEmailRequest$outboundSchema` instead. */
  export const outboundSchema = SendEmailRequest$outboundSchema;
  /** @deprecated use `SendEmailRequest$Outbound` instead. */
  export type Outbound = SendEmailRequest$Outbound;
}
