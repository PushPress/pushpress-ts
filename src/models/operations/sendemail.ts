/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type SendEmailRequestBody = {
  to: string;
  subject: string;
  body: string;
  from: string;
  cc?: string | undefined;
  bcc?: string | undefined;
  replyTo?: string | undefined;
};

/** @internal */
export const SendEmailRequestBody$inboundSchema: z.ZodType<
  SendEmailRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  to: z.string(),
  subject: z.string(),
  body: z.string(),
  from: z.string(),
  cc: z.string().optional(),
  bcc: z.string().optional(),
  replyTo: z.string().optional(),
});

/** @internal */
export type SendEmailRequestBody$Outbound = {
  to: string;
  subject: string;
  body: string;
  from: string;
  cc?: string | undefined;
  bcc?: string | undefined;
  replyTo?: string | undefined;
};

/** @internal */
export const SendEmailRequestBody$outboundSchema: z.ZodType<
  SendEmailRequestBody$Outbound,
  z.ZodTypeDef,
  SendEmailRequestBody
> = z.object({
  to: z.string(),
  subject: z.string(),
  body: z.string(),
  from: z.string(),
  cc: z.string().optional(),
  bcc: z.string().optional(),
  replyTo: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SendEmailRequestBody$ {
  /** @deprecated use `SendEmailRequestBody$inboundSchema` instead. */
  export const inboundSchema = SendEmailRequestBody$inboundSchema;
  /** @deprecated use `SendEmailRequestBody$outboundSchema` instead. */
  export const outboundSchema = SendEmailRequestBody$outboundSchema;
  /** @deprecated use `SendEmailRequestBody$Outbound` instead. */
  export type Outbound = SendEmailRequestBody$Outbound;
}
