/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type CreateWebhookRequestBody = {
  /**
   * URL to send the event data to
   */
  url: string;
  /**
   * List of events the webhook is subscribed to
   */
  events: Array<string>;
  /**
   * companyId of the company to which the webhook belongs
   */
  company?: string | undefined;
};

/** @internal */
export const CreateWebhookRequestBody$inboundSchema: z.ZodType<
  CreateWebhookRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  url: z.string(),
  events: z.array(z.string()),
  company: z.string().optional(),
});

/** @internal */
export type CreateWebhookRequestBody$Outbound = {
  url: string;
  events: Array<string>;
  company?: string | undefined;
};

/** @internal */
export const CreateWebhookRequestBody$outboundSchema: z.ZodType<
  CreateWebhookRequestBody$Outbound,
  z.ZodTypeDef,
  CreateWebhookRequestBody
> = z.object({
  url: z.string(),
  events: z.array(z.string()),
  company: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateWebhookRequestBody$ {
  /** @deprecated use `CreateWebhookRequestBody$inboundSchema` instead. */
  export const inboundSchema = CreateWebhookRequestBody$inboundSchema;
  /** @deprecated use `CreateWebhookRequestBody$outboundSchema` instead. */
  export const outboundSchema = CreateWebhookRequestBody$outboundSchema;
  /** @deprecated use `CreateWebhookRequestBody$Outbound` instead. */
  export type Outbound = CreateWebhookRequestBody$Outbound;
}
