/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type InstallAppRequestBody = {
  /**
   * The ID of the company on which to install the app
   */
  company: string;
};

export type InstallAppRequest = {
  appId: string;
  requestBody: InstallAppRequestBody;
};

/** @internal */
export const InstallAppRequestBody$inboundSchema: z.ZodType<
  InstallAppRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  company: z.string(),
});

/** @internal */
export type InstallAppRequestBody$Outbound = {
  company: string;
};

/** @internal */
export const InstallAppRequestBody$outboundSchema: z.ZodType<
  InstallAppRequestBody$Outbound,
  z.ZodTypeDef,
  InstallAppRequestBody
> = z.object({
  company: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InstallAppRequestBody$ {
  /** @deprecated use `InstallAppRequestBody$inboundSchema` instead. */
  export const inboundSchema = InstallAppRequestBody$inboundSchema;
  /** @deprecated use `InstallAppRequestBody$outboundSchema` instead. */
  export const outboundSchema = InstallAppRequestBody$outboundSchema;
  /** @deprecated use `InstallAppRequestBody$Outbound` instead. */
  export type Outbound = InstallAppRequestBody$Outbound;
}

/** @internal */
export const InstallAppRequest$inboundSchema: z.ZodType<
  InstallAppRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  app_id: z.string(),
  RequestBody: z.lazy(() => InstallAppRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "app_id": "appId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type InstallAppRequest$Outbound = {
  app_id: string;
  RequestBody: InstallAppRequestBody$Outbound;
};

/** @internal */
export const InstallAppRequest$outboundSchema: z.ZodType<
  InstallAppRequest$Outbound,
  z.ZodTypeDef,
  InstallAppRequest
> = z.object({
  appId: z.string(),
  requestBody: z.lazy(() => InstallAppRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    appId: "app_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InstallAppRequest$ {
  /** @deprecated use `InstallAppRequest$inboundSchema` instead. */
  export const inboundSchema = InstallAppRequest$inboundSchema;
  /** @deprecated use `InstallAppRequest$outboundSchema` instead. */
  export const outboundSchema = InstallAppRequest$outboundSchema;
  /** @deprecated use `InstallAppRequest$Outbound` instead. */
  export type Outbound = InstallAppRequest$Outbound;
}
