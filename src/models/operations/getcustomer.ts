/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type GetCustomerGlobals = {
  companyId?: string | undefined;
};

export type GetCustomerRequest = {
  uuid: string;
  companyId?: string | undefined;
};

/** @internal */
export const GetCustomerGlobals$inboundSchema: z.ZodType<
  GetCustomerGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  "company-id": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "company-id": "companyId",
  });
});

/** @internal */
export type GetCustomerGlobals$Outbound = {
  "company-id"?: string | undefined;
};

/** @internal */
export const GetCustomerGlobals$outboundSchema: z.ZodType<
  GetCustomerGlobals$Outbound,
  z.ZodTypeDef,
  GetCustomerGlobals
> = z.object({
  companyId: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    companyId: "company-id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCustomerGlobals$ {
  /** @deprecated use `GetCustomerGlobals$inboundSchema` instead. */
  export const inboundSchema = GetCustomerGlobals$inboundSchema;
  /** @deprecated use `GetCustomerGlobals$outboundSchema` instead. */
  export const outboundSchema = GetCustomerGlobals$outboundSchema;
  /** @deprecated use `GetCustomerGlobals$Outbound` instead. */
  export type Outbound = GetCustomerGlobals$Outbound;
}

/** @internal */
export const GetCustomerRequest$inboundSchema: z.ZodType<
  GetCustomerRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
  "company-id": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "company-id": "companyId",
  });
});

/** @internal */
export type GetCustomerRequest$Outbound = {
  uuid: string;
  "company-id"?: string | undefined;
};

/** @internal */
export const GetCustomerRequest$outboundSchema: z.ZodType<
  GetCustomerRequest$Outbound,
  z.ZodTypeDef,
  GetCustomerRequest
> = z.object({
  uuid: z.string(),
  companyId: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    companyId: "company-id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCustomerRequest$ {
  /** @deprecated use `GetCustomerRequest$inboundSchema` instead. */
  export const inboundSchema = GetCustomerRequest$inboundSchema;
  /** @deprecated use `GetCustomerRequest$outboundSchema` instead. */
  export const outboundSchema = GetCustomerRequest$outboundSchema;
  /** @deprecated use `GetCustomerRequest$Outbound` instead. */
  export type Outbound = GetCustomerRequest$Outbound;
}
