/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetClassCheckinGlobals = {
  companyId?: string | undefined;
};

export type GetClassCheckinRequest = {
  uuid: string;
  /**
   * When using multitenant API keys, specify the company
   */
  companyId?: string | undefined;
};

/** @internal */
export const GetClassCheckinGlobals$inboundSchema: z.ZodType<
  GetClassCheckinGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  "company-id": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "company-id": "companyId",
  });
});

/** @internal */
export type GetClassCheckinGlobals$Outbound = {
  "company-id"?: string | undefined;
};

/** @internal */
export const GetClassCheckinGlobals$outboundSchema: z.ZodType<
  GetClassCheckinGlobals$Outbound,
  z.ZodTypeDef,
  GetClassCheckinGlobals
> = z.object({
  companyId: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    companyId: "company-id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClassCheckinGlobals$ {
  /** @deprecated use `GetClassCheckinGlobals$inboundSchema` instead. */
  export const inboundSchema = GetClassCheckinGlobals$inboundSchema;
  /** @deprecated use `GetClassCheckinGlobals$outboundSchema` instead. */
  export const outboundSchema = GetClassCheckinGlobals$outboundSchema;
  /** @deprecated use `GetClassCheckinGlobals$Outbound` instead. */
  export type Outbound = GetClassCheckinGlobals$Outbound;
}

export function getClassCheckinGlobalsToJSON(
  getClassCheckinGlobals: GetClassCheckinGlobals,
): string {
  return JSON.stringify(
    GetClassCheckinGlobals$outboundSchema.parse(getClassCheckinGlobals),
  );
}

export function getClassCheckinGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<GetClassCheckinGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetClassCheckinGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetClassCheckinGlobals' from JSON`,
  );
}

/** @internal */
export const GetClassCheckinRequest$inboundSchema: z.ZodType<
  GetClassCheckinRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
  "company-id": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "company-id": "companyId",
  });
});

/** @internal */
export type GetClassCheckinRequest$Outbound = {
  uuid: string;
  "company-id"?: string | undefined;
};

/** @internal */
export const GetClassCheckinRequest$outboundSchema: z.ZodType<
  GetClassCheckinRequest$Outbound,
  z.ZodTypeDef,
  GetClassCheckinRequest
> = z.object({
  uuid: z.string(),
  companyId: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    companyId: "company-id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetClassCheckinRequest$ {
  /** @deprecated use `GetClassCheckinRequest$inboundSchema` instead. */
  export const inboundSchema = GetClassCheckinRequest$inboundSchema;
  /** @deprecated use `GetClassCheckinRequest$outboundSchema` instead. */
  export const outboundSchema = GetClassCheckinRequest$outboundSchema;
  /** @deprecated use `GetClassCheckinRequest$Outbound` instead. */
  export type Outbound = GetClassCheckinRequest$Outbound;
}

export function getClassCheckinRequestToJSON(
  getClassCheckinRequest: GetClassCheckinRequest,
): string {
  return JSON.stringify(
    GetClassCheckinRequest$outboundSchema.parse(getClassCheckinRequest),
  );
}

export function getClassCheckinRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetClassCheckinRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetClassCheckinRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetClassCheckinRequest' from JSON`,
  );
}
