/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type ExtendApiKeyRequest = {
  keyId: string;
};

/** @internal */
export const ExtendApiKeyRequest$inboundSchema: z.ZodType<
  ExtendApiKeyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  key_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "key_id": "keyId",
  });
});

/** @internal */
export type ExtendApiKeyRequest$Outbound = {
  key_id: string;
};

/** @internal */
export const ExtendApiKeyRequest$outboundSchema: z.ZodType<
  ExtendApiKeyRequest$Outbound,
  z.ZodTypeDef,
  ExtendApiKeyRequest
> = z.object({
  keyId: z.string(),
}).transform((v) => {
  return remap$(v, {
    keyId: "key_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExtendApiKeyRequest$ {
  /** @deprecated use `ExtendApiKeyRequest$inboundSchema` instead. */
  export const inboundSchema = ExtendApiKeyRequest$inboundSchema;
  /** @deprecated use `ExtendApiKeyRequest$outboundSchema` instead. */
  export const outboundSchema = ExtendApiKeyRequest$outboundSchema;
  /** @deprecated use `ExtendApiKeyRequest$Outbound` instead. */
  export type Outbound = ExtendApiKeyRequest$Outbound;
}
