/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type ListApiKeysSecurity = {
  bearer: string;
};

export type ListApiKeysRequest = {
  limit?: number | undefined;
  companyId?: any | undefined;
};

export type ListApiKeysData = {
  resultArray: Array<components.ApiKey>;
};

/**
 * Default Response
 */
export type ListApiKeysResponseBody = {
  data: ListApiKeysData;
};

/** @internal */
export const ListApiKeysSecurity$inboundSchema: z.ZodType<
  ListApiKeysSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  bearer: z.string(),
});

/** @internal */
export type ListApiKeysSecurity$Outbound = {
  bearer: string;
};

/** @internal */
export const ListApiKeysSecurity$outboundSchema: z.ZodType<
  ListApiKeysSecurity$Outbound,
  z.ZodTypeDef,
  ListApiKeysSecurity
> = z.object({
  bearer: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListApiKeysSecurity$ {
  /** @deprecated use `ListApiKeysSecurity$inboundSchema` instead. */
  export const inboundSchema = ListApiKeysSecurity$inboundSchema;
  /** @deprecated use `ListApiKeysSecurity$outboundSchema` instead. */
  export const outboundSchema = ListApiKeysSecurity$outboundSchema;
  /** @deprecated use `ListApiKeysSecurity$Outbound` instead. */
  export type Outbound = ListApiKeysSecurity$Outbound;
}

/** @internal */
export const ListApiKeysRequest$inboundSchema: z.ZodType<
  ListApiKeysRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  limit: z.number().default(100),
  "company-id": z.any().optional(),
}).transform((v) => {
  return remap$(v, {
    "company-id": "companyId",
  });
});

/** @internal */
export type ListApiKeysRequest$Outbound = {
  limit: number;
  "company-id"?: any | undefined;
};

/** @internal */
export const ListApiKeysRequest$outboundSchema: z.ZodType<
  ListApiKeysRequest$Outbound,
  z.ZodTypeDef,
  ListApiKeysRequest
> = z.object({
  limit: z.number().default(100),
  companyId: z.any().optional(),
}).transform((v) => {
  return remap$(v, {
    companyId: "company-id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListApiKeysRequest$ {
  /** @deprecated use `ListApiKeysRequest$inboundSchema` instead. */
  export const inboundSchema = ListApiKeysRequest$inboundSchema;
  /** @deprecated use `ListApiKeysRequest$outboundSchema` instead. */
  export const outboundSchema = ListApiKeysRequest$outboundSchema;
  /** @deprecated use `ListApiKeysRequest$Outbound` instead. */
  export type Outbound = ListApiKeysRequest$Outbound;
}

/** @internal */
export const ListApiKeysData$inboundSchema: z.ZodType<
  ListApiKeysData,
  z.ZodTypeDef,
  unknown
> = z.object({
  resultArray: z.array(components.ApiKey$inboundSchema),
});

/** @internal */
export type ListApiKeysData$Outbound = {
  resultArray: Array<components.ApiKey$Outbound>;
};

/** @internal */
export const ListApiKeysData$outboundSchema: z.ZodType<
  ListApiKeysData$Outbound,
  z.ZodTypeDef,
  ListApiKeysData
> = z.object({
  resultArray: z.array(components.ApiKey$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListApiKeysData$ {
  /** @deprecated use `ListApiKeysData$inboundSchema` instead. */
  export const inboundSchema = ListApiKeysData$inboundSchema;
  /** @deprecated use `ListApiKeysData$outboundSchema` instead. */
  export const outboundSchema = ListApiKeysData$outboundSchema;
  /** @deprecated use `ListApiKeysData$Outbound` instead. */
  export type Outbound = ListApiKeysData$Outbound;
}

/** @internal */
export const ListApiKeysResponseBody$inboundSchema: z.ZodType<
  ListApiKeysResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => ListApiKeysData$inboundSchema),
});

/** @internal */
export type ListApiKeysResponseBody$Outbound = {
  data: ListApiKeysData$Outbound;
};

/** @internal */
export const ListApiKeysResponseBody$outboundSchema: z.ZodType<
  ListApiKeysResponseBody$Outbound,
  z.ZodTypeDef,
  ListApiKeysResponseBody
> = z.object({
  data: z.lazy(() => ListApiKeysData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListApiKeysResponseBody$ {
  /** @deprecated use `ListApiKeysResponseBody$inboundSchema` instead. */
  export const inboundSchema = ListApiKeysResponseBody$inboundSchema;
  /** @deprecated use `ListApiKeysResponseBody$outboundSchema` instead. */
  export const outboundSchema = ListApiKeysResponseBody$outboundSchema;
  /** @deprecated use `ListApiKeysResponseBody$Outbound` instead. */
  export type Outbound = ListApiKeysResponseBody$Outbound;
}
