/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type SendPingRequestBody = {
  channel: string;
  message: string;
};

export type SendPingRequest = {
  companyId?: string | undefined;
  requestBody: SendPingRequestBody;
};

/** @internal */
export const SendPingRequestBody$inboundSchema: z.ZodType<
  SendPingRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  channel: z.string(),
  message: z.string(),
});

/** @internal */
export type SendPingRequestBody$Outbound = {
  channel: string;
  message: string;
};

/** @internal */
export const SendPingRequestBody$outboundSchema: z.ZodType<
  SendPingRequestBody$Outbound,
  z.ZodTypeDef,
  SendPingRequestBody
> = z.object({
  channel: z.string(),
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SendPingRequestBody$ {
  /** @deprecated use `SendPingRequestBody$inboundSchema` instead. */
  export const inboundSchema = SendPingRequestBody$inboundSchema;
  /** @deprecated use `SendPingRequestBody$outboundSchema` instead. */
  export const outboundSchema = SendPingRequestBody$outboundSchema;
  /** @deprecated use `SendPingRequestBody$Outbound` instead. */
  export type Outbound = SendPingRequestBody$Outbound;
}

/** @internal */
export const SendPingRequest$inboundSchema: z.ZodType<
  SendPingRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  companyId: z.string().optional(),
  RequestBody: z.lazy(() => SendPingRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type SendPingRequest$Outbound = {
  companyId?: string | undefined;
  RequestBody: SendPingRequestBody$Outbound;
};

/** @internal */
export const SendPingRequest$outboundSchema: z.ZodType<
  SendPingRequest$Outbound,
  z.ZodTypeDef,
  SendPingRequest
> = z.object({
  companyId: z.string().optional(),
  requestBody: z.lazy(() => SendPingRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SendPingRequest$ {
  /** @deprecated use `SendPingRequest$inboundSchema` instead. */
  export const inboundSchema = SendPingRequest$inboundSchema;
  /** @deprecated use `SendPingRequest$outboundSchema` instead. */
  export const outboundSchema = SendPingRequest$outboundSchema;
  /** @deprecated use `SendPingRequest$Outbound` instead. */
  export type Outbound = SendPingRequest$Outbound;
}
