/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type GetApiKeySecurity = {
  bearer: string;
};

export type GetApiKeyRequest = {
  id: string;
  companyId?: any | undefined;
};

/** @internal */
export const GetApiKeySecurity$inboundSchema: z.ZodType<
  GetApiKeySecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  bearer: z.string(),
});

/** @internal */
export type GetApiKeySecurity$Outbound = {
  bearer: string;
};

/** @internal */
export const GetApiKeySecurity$outboundSchema: z.ZodType<
  GetApiKeySecurity$Outbound,
  z.ZodTypeDef,
  GetApiKeySecurity
> = z.object({
  bearer: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiKeySecurity$ {
  /** @deprecated use `GetApiKeySecurity$inboundSchema` instead. */
  export const inboundSchema = GetApiKeySecurity$inboundSchema;
  /** @deprecated use `GetApiKeySecurity$outboundSchema` instead. */
  export const outboundSchema = GetApiKeySecurity$outboundSchema;
  /** @deprecated use `GetApiKeySecurity$Outbound` instead. */
  export type Outbound = GetApiKeySecurity$Outbound;
}

/** @internal */
export const GetApiKeyRequest$inboundSchema: z.ZodType<
  GetApiKeyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  "company-id": z.any().optional(),
}).transform((v) => {
  return remap$(v, {
    "company-id": "companyId",
  });
});

/** @internal */
export type GetApiKeyRequest$Outbound = {
  id: string;
  "company-id"?: any | undefined;
};

/** @internal */
export const GetApiKeyRequest$outboundSchema: z.ZodType<
  GetApiKeyRequest$Outbound,
  z.ZodTypeDef,
  GetApiKeyRequest
> = z.object({
  id: z.string(),
  companyId: z.any().optional(),
}).transform((v) => {
  return remap$(v, {
    companyId: "company-id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiKeyRequest$ {
  /** @deprecated use `GetApiKeyRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiKeyRequest$inboundSchema;
  /** @deprecated use `GetApiKeyRequest$outboundSchema` instead. */
  export const outboundSchema = GetApiKeyRequest$outboundSchema;
  /** @deprecated use `GetApiKeyRequest$Outbound` instead. */
  export type Outbound = GetApiKeyRequest$Outbound;
}
