/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type ListEventCheckinsRequest = {
  /**
   * Page number
   */
  page?: number | undefined;
  /**
   * Limit
   */
  limit?: number | undefined;
  customer?: string | undefined;
  /**
   * Get all checkins before this unix timestamp (seconds)
   */
  before?: number | undefined;
  /**
   * Get all checkins after this unix timestamp (seconds)
   */
  after?: number | undefined;
  companyId?: any | undefined;
};

export type Data = {
  resultArray: Array<components.EventCheckin>;
};

/**
 * Default Response
 */
export type ListEventCheckinsResponseBody = {
  data: Data;
};

export type ListEventCheckinsResponse = {
  result: ListEventCheckinsResponseBody;
};

/** @internal */
export const ListEventCheckinsRequest$inboundSchema: z.ZodType<
  ListEventCheckinsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  page: z.number().int().optional(),
  limit: z.number().int().optional(),
  customer: z.string().optional(),
  before: z.number().optional(),
  after: z.number().optional(),
  companyId: z.any().optional(),
});

/** @internal */
export type ListEventCheckinsRequest$Outbound = {
  page?: number | undefined;
  limit?: number | undefined;
  customer?: string | undefined;
  before?: number | undefined;
  after?: number | undefined;
  companyId?: any | undefined;
};

/** @internal */
export const ListEventCheckinsRequest$outboundSchema: z.ZodType<
  ListEventCheckinsRequest$Outbound,
  z.ZodTypeDef,
  ListEventCheckinsRequest
> = z.object({
  page: z.number().int().optional(),
  limit: z.number().int().optional(),
  customer: z.string().optional(),
  before: z.number().optional(),
  after: z.number().optional(),
  companyId: z.any().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListEventCheckinsRequest$ {
  /** @deprecated use `ListEventCheckinsRequest$inboundSchema` instead. */
  export const inboundSchema = ListEventCheckinsRequest$inboundSchema;
  /** @deprecated use `ListEventCheckinsRequest$outboundSchema` instead. */
  export const outboundSchema = ListEventCheckinsRequest$outboundSchema;
  /** @deprecated use `ListEventCheckinsRequest$Outbound` instead. */
  export type Outbound = ListEventCheckinsRequest$Outbound;
}

/** @internal */
export const Data$inboundSchema: z.ZodType<Data, z.ZodTypeDef, unknown> = z
  .object({
    resultArray: z.array(components.EventCheckin$inboundSchema),
  });

/** @internal */
export type Data$Outbound = {
  resultArray: Array<components.EventCheckin$Outbound>;
};

/** @internal */
export const Data$outboundSchema: z.ZodType<Data$Outbound, z.ZodTypeDef, Data> =
  z.object({
    resultArray: z.array(components.EventCheckin$outboundSchema),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Data$ {
  /** @deprecated use `Data$inboundSchema` instead. */
  export const inboundSchema = Data$inboundSchema;
  /** @deprecated use `Data$outboundSchema` instead. */
  export const outboundSchema = Data$outboundSchema;
  /** @deprecated use `Data$Outbound` instead. */
  export type Outbound = Data$Outbound;
}

/** @internal */
export const ListEventCheckinsResponseBody$inboundSchema: z.ZodType<
  ListEventCheckinsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => Data$inboundSchema),
});

/** @internal */
export type ListEventCheckinsResponseBody$Outbound = {
  data: Data$Outbound;
};

/** @internal */
export const ListEventCheckinsResponseBody$outboundSchema: z.ZodType<
  ListEventCheckinsResponseBody$Outbound,
  z.ZodTypeDef,
  ListEventCheckinsResponseBody
> = z.object({
  data: z.lazy(() => Data$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListEventCheckinsResponseBody$ {
  /** @deprecated use `ListEventCheckinsResponseBody$inboundSchema` instead. */
  export const inboundSchema = ListEventCheckinsResponseBody$inboundSchema;
  /** @deprecated use `ListEventCheckinsResponseBody$outboundSchema` instead. */
  export const outboundSchema = ListEventCheckinsResponseBody$outboundSchema;
  /** @deprecated use `ListEventCheckinsResponseBody$Outbound` instead. */
  export type Outbound = ListEventCheckinsResponseBody$Outbound;
}

/** @internal */
export const ListEventCheckinsResponse$inboundSchema: z.ZodType<
  ListEventCheckinsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: z.lazy(() => ListEventCheckinsResponseBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type ListEventCheckinsResponse$Outbound = {
  Result: ListEventCheckinsResponseBody$Outbound;
};

/** @internal */
export const ListEventCheckinsResponse$outboundSchema: z.ZodType<
  ListEventCheckinsResponse$Outbound,
  z.ZodTypeDef,
  ListEventCheckinsResponse
> = z.object({
  result: z.lazy(() => ListEventCheckinsResponseBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListEventCheckinsResponse$ {
  /** @deprecated use `ListEventCheckinsResponse$inboundSchema` instead. */
  export const inboundSchema = ListEventCheckinsResponse$inboundSchema;
  /** @deprecated use `ListEventCheckinsResponse$outboundSchema` instead. */
  export const outboundSchema = ListEventCheckinsResponse$outboundSchema;
  /** @deprecated use `ListEventCheckinsResponse$Outbound` instead. */
  export type Outbound = ListEventCheckinsResponse$Outbound;
}
